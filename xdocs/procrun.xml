<?xml version="1.0"?>

<document>

 <properties>
  <title>Daemon : Procrun</title>
  <author email="jfrederic.clere@fujitsu-siemens.con">Jean-Frederic Clere</author>
  <author email="william.barker@wilshire.com">Bill Barker</author>
  <author email="mladen.turk@gisdata.hr">Mladen Turk</author>
 </properties>

<body>
<section name="Introduction">
<p>
      Actualy only the win32 platforms are supported.
</p>
</section>
<section name="Building">
<p>
      It is possible to use cygwin to build procrun.
      <a href="http://www.cygwin.com/"> cygwin</a> for more informations.
</p>
<p>
      If you have access to MSVC (version 6.0 or higher), then simply 
      open the corresponding build project file.
      <ul>
       <li>For MSVC 6.x, use <code>procrun.dsw</code></li>
       <li>For MSVC.NET, use <code>procrun.sln</code></li>
      </ul>
      At this point, you need to select from the build menu which version you
      want to build (select either the release or debug build, depending on 
      your preferences).  The selections are:
      <ul>
       <li><code>procrun</code> if you want the GUI interface</li>
       <li><code>procrun CONSOLE</code> if you don't want the GUI interface</li>
       <li><code>procrun DLL</code> if you want the Control Panel application</li>
      </ul>
</p>
</section>
<section name="Using procrun">
<subsection name="Installing the service">
<p>
     The first thing that you must do is to install your service.  As a 
     special case, if you haved installed Tomcat 5 via the installer, then it 
     will do this for you, and you can skip this step.
</p>
<p>
     To install the service, you need to use the <code>//IS//</code> parameter.
     Use <code>tomcatw.exe</code> if you want to run the Graphical version, 
     or <code>tomcat.exe</code> for the non-Graphical version.  For example:
     <source>
           tomcat //IS//Tomcat5 --DisplayName "Tomcat 5.0.12" \
            --Description "Tomcat 5.0.12 JDK 1.4 http://jakarta.apache.org" \
            --ImagePath "c:\devtools\tomcat\5.0\bin\bootstrap.jar" \
            --StartupClass org.apache.catalina.startup.Bootstrap;main;start \
            --ShutdownClass org.apache.catalina.startup.Bootstrap;main;stop \
            --Java auto
    </source>
    <table>
    <caption>The options available for installation are</caption>
    <tr><th>--DisplayName</th>
        <td>This is the name shown in the Windows Services manager.</td></tr>
    <tr><th>--Description</th>
        <td>This is the service description shown in the windows Services manager.</td></tr>
    <tr><th>--ImagePath</th>
        <td>Full path to the executable to be run as service,
            or name of the Java Class Path. In cases when the
            service runs JVM or Java binary this is the
            parameter passed to -Djava.class.path option.</td></tr>
    <tr><th>--Arguments</th>
        <td>Arguments are enclosed inside double quotation
            marks and passed to the service image.</td></tr>
    <tr><th>--WorkingPath</th>
        <td>Sets the working path to the desired value.</td></tr>
    <tr><th>--Java</th>
        <td><ul>
             <li>auto:
                    Auto will cause to load the default JVM read
                    read from registry.</li>
             <li>java[w]:
                    The default java.exe or javaw.exe will be
                    located and executed with
                    -Djava.class.path=ImagePath</li>
             <li>If neither java or auto are specified then this
                parameter is treated as full path to the jvm.dll</li>
            </ul></td></tr>
    <tr><th>--JavaOptions</th>
        <td>               This is the list of options to be passed to the JVM
                The options are separated using hash (#) simbol.
                For Example:
                -Xmx=100M#-Djava.compiler=NONE</td></tr>
    <tr><th>--StartupClass</th>
        <td>Class name that will be called if started from JVM
                when the applications starts.
                The method name is separated by semicolon after the
                class name.
                The parameters passed to the class method are semicolon
                separated values after the method name.
                For example:
                org/apache/jk/apr/TomcatStarter;Main;start</td></tr>
    <tr><th>--ShutdownClass</th>
        <td>Class name that will be called if started from JVM
                when the applications stops. The class has to have
                the method Main.
                The method name is separated by semicolon after the
                class name.
                The parameters passed to the class method are semicolon
                separated values after the method name.
                For example:
                org/apache/jk/apr/TomcatStarter;Main;stop;some;dummy;params</td></tr>
   <tr><th>--StdInputFile</th>
       <td>The file that will be read an passed as standard
                input stream to the redirected application</td></tr>
   <tr><th>--StdOutputFile</th>
       <td>Path to the redirected stdout.</td></tr>
   <tr><th>--StdErrorFile</th>
       <td>Path to the redirected stderr.</td></tr>
   <tr><th>--Startup</th>
       <td>The services startup mode Automatic or Manual.
                Default value is auto.</td></tr>
   <tr><th>--User</th>
       <td>The User account used for launching redirected process.</td></tr>
   <tr><th>--Password</th>
       <td>The password of User account used for launching
                redirected process.</td></tr>
   <tr><th>--Install</th>
       <td>Used as Service manager ImagePath when installing
                service from installation program using procrunw.</td></tr>
  </table>
</p>
</subsection>
<subsection name="Running the service">
<p>
    You can use the Windows Service Manager to stop and start the 
    service, as you would for any other service.  This is the recommended way
    to manage the service.</p>
<p>
    To test the service, or to simply run the process manually, use the //GT//
    option for the Graphical version.  For example:
    <source>
       tomcatw //GT//Tomcat5
    </source>
    To test the non-Graphical version, use the //TS// option.  For example:
    <source>
      tomcat //TS//Tomcat5
    </source>
    Either of these will start your service as a normal program running under
    the identity of the currently logged in user.  It is 
    <strong>Important</strong> that the Service is stopped before testing, or
    these commands will fail.</p>
</subsection>
<subsection name="Changing the Service Parameters from the GUI">
<p>
    To change the Service settings using the GUI interface, use the //ES// option with
    <code>tomcatw.exe</code>.  You can then change the settings by entering
    the new values in the correct boxes.  For example:
    <source>
      tomcatw //ES//Tomcat5
    </source>
</p>
</subsection>
<subsection name="Changing the Service Parameters from the Command Line">
<p>
   To change the Service settings from the command line, use the //US// option.
   The parameters are the same as for <a href="#Installing%20the%20service">
   Installing the service</a>.  For example:
   <source>
      tomcat //US//Tomcat5 --Java c:\jsdk1.4.1_02\jre\bin\client\jvm.dll \
             --StdOutputFile c:\Tomcat5\logs\stdout.txt \
             --StdErrorFile c:\Tomcat5\logs\stderr.txt
   </source>
</p>
</subsection>
<subsection name="Removing the Service">
<p>
   To remove the service, use the //DS// option.  For example:
   <source>
     tomcat //DS//Tomcat5
   </source>
   This command will remove the service from the Windows Service Manager, but
   it will still allow you to run it via the //GT// or //TS// options.
</p>
</subsection>
</section>

</body>
</document>
